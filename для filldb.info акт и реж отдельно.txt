
-- Создаём таблицу пользователей
DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки", 
  user_first_name VARCHAR(100) NOT NULL COMMENT "Имя пользователя",
  user_last_name VARCHAR(100) NOT NULL COMMENT "Фамилия пользователя",
  email VARCHAR(100) NOT NULL UNIQUE COMMENT "Почта",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Пользователи";  

-- Таблица профилей пользователей
DROP TABLE IF EXISTS users_profiles;
CREATE TABLE users_profiles (
  user_id INT UNSIGNED NOT NULL PRIMARY KEY COMMENT "Ссылка на пользователя", 
  gender CHAR(1) NOT NULL COMMENT "Пол",
  birthday DATE COMMENT "Дата рождения",
  city VARCHAR(130) COMMENT "Город проживания",
  country VARCHAR(130) COMMENT "Страна проживания",
  last_login DATETIME COMMENT "Последний вход в систему",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Профили пользователей"; 

-- Создаём таблицу актеров
DROP TABLE IF EXISTS actors;
CREATE TABLE actors (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки", 
  actor_first_name VARCHAR(100) NOT NULL COMMENT "Имя актера",
  actor_last_name VARCHAR(100) NOT NULL COMMENT "Фамилия актера",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Актеры";  

-- Таблица профилей актеров
DROP TABLE IF EXISTS actors_profiles;
CREATE TABLE actors_profiles (
  actor_id INT UNSIGNED NOT NULL PRIMARY KEY COMMENT "Ссылка на актера", 
  gender CHAR(1) NOT NULL COMMENT "Пол",
  birthday DATE COMMENT "Дата рождения",
  city VARCHAR(130) COMMENT "Город проживания",
  country VARCHAR(130) COMMENT "Страна проживания",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Профили актеров";


-- Создаём таблицу режиссеров
DROP TABLE IF EXISTS directors;
CREATE TABLE directors (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки", 
  director_first_name VARCHAR(100) NOT NULL COMMENT "Имя режиссера",
  director_last_name VARCHAR(100) NOT NULL COMMENT "Фамилия режиссера",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Режиссеры";  

-- Таблица профилей режиссеров
DROP TABLE IF EXISTS directors_profiles;
CREATE TABLE directors_profiles (
  director_id INT UNSIGNED NOT NULL PRIMARY KEY COMMENT "Ссылка на режиссера", 
  gender CHAR(1) NOT NULL COMMENT "Пол",
  birthday DATE COMMENT "Дата рождения",
  city VARCHAR(130) COMMENT "Город проживания",
  country VARCHAR(130) COMMENT "Страна проживания",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Профили режиссеров";

 


 
-- Таблица жанров
DROP TABLE IF EXISTS genres;
CREATE TABLE genres (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
) COMMENT "Жанры";




 -- Таблица фильмов
DROP TABLE IF EXISTS movies;
CREATE TABLE movies (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки",
  movie_name VARCHAR(255) NOT NULL COMMENT "Путь к файлу",
  description TEXT NOT NULL COMMENT "Описание фильма",
  country VARCHAR(130) COMMENT "Страна происхождения",
  movie_release_date DATE COMMENT "Дата выхода фильма",
  genres_id INT UNSIGNED NOT NULL COMMENT "Ссылка на жанр", 
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Фильмы"; 
 
 
 -- Таблица связи фильмов и актеров
DROP TABLE IF EXISTS movies_actors;
CREATE TABLE movies_actors (
  movie_id INT UNSIGNED NOT NULL COMMENT "Ссылка на фильм",
  actor_id INT UNSIGNED NOT NULL COMMENT "Ссылка на актера",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки", 
  PRIMARY KEY (movie_id, actor_id) COMMENT "Составной первичный ключ"
) COMMENT "Участники фильма, связь между фильмами и актерами";


 -- Таблица связи фильмов и режиссеров
DROP TABLE IF EXISTS movies_directors;
CREATE TABLE movies_directors (
  movie_id INT UNSIGNED NOT NULL COMMENT "Ссылка на фильм",
  director_id INT UNSIGNED NOT NULL COMMENT "Ссылка на режиссера",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки", 
  PRIMARY KEY (movie_id, director_id) COMMENT "Составной первичный ключ"
) COMMENT "Участники фильма, связь между фильмами и режиссерами";

 
-- Таблица медиафайлов
DROP TABLE IF EXISTS media;
CREATE TABLE media (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки",
  movie_id INT UNSIGNED NOT NULL COMMENT "Ссылка на фильм, к которому относится файл",
  filename VARCHAR(255) NOT NULL COMMENT "Путь к файлу",
  size INT NOT NULL COMMENT "Размер файла",
  metadata JSON COMMENT "Метаданные файла",
  media_type_id INT UNSIGNED NOT NULL COMMENT "Ссылка на тип контента",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Медиафайлы";


-- Таблица типов медиафайлов
DROP TABLE IF EXISTS media_types;
CREATE TABLE media_types (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT "Идентификатор строки",
  name VARCHAR(255) NOT NULL UNIQUE COMMENT "Название типа",
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT "Время создания строки",  
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT "Время обновления строки"
) COMMENT "Типы медиафайлов";



-- Создадим таблицу рецензий пользователей на фильмы
DROP TABLE IF EXISTS reviews;
CREATE TABLE reviews (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  movie_id INT UNSIGNED,
  head VARCHAR(255),
  body TEXT NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) COMMENT "Рецензии пользователей к фильмам";
 



-- Таблица оценок фильмов пользователями (рейтинг)
DROP TABLE IF EXISTS ratings;
CREATE TABLE ratings (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  user_id INT UNSIGNED NOT NULL,
  movie_id INT UNSIGNED NOT NULL,
  rating INT UNSIGNED NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
) COMMENT "Оценки фильмов пользователями";


